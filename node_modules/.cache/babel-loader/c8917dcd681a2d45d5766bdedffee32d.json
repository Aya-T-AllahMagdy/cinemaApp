{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\App Corp\\\\Desktop\\\\CinemaApp\\\\src\\\\Components\\\\SearchComponent\\\\SearchComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Spinner, Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { debounce, result } from \"lodash\";\nimport { sendsearch, changeSearchVal } from \"./../../redux/Search/Search.Action\";\nimport { NavLink, Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchComponent(props) {\n  _s();\n\n  const [word, setWord] = useState();\n  const [search, setSearch] = useState();\n  let history = useHistory();\n\n  const handleChange = e => {\n    setWord(\"\");\n  };\n\n  useEffect(() => {\n    props.sendsearch(search);\n  }, [search]);\n  console.log(props.sendSearchState, \"ppp\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search\",\n      id: \"filled-basic\",\n      value: search,\n      label: \"Search a Word\",\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchComponent, \"/jpzc+3cwxL17o4L2TuhdpcCwcY=\", false, function () {\n  return [useHistory];\n});\n\n_c = SearchComponent;\n\nconst mapStateToProps = state => ({\n  searchVal: state.search.searchVal,\n  isSendingSearch: state.search.isSendingSearch,\n  sendSearchState: state.search.sendSearchState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendsearch: question => dispatch(sendsearch(question)),\n  changeSearchVal: newQuery => dispatch(changeSearchVal(newQuery))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchComponent\");","map":{"version":3,"sources":["C:/Users/App Corp/Desktop/CinemaApp/src/Components/SearchComponent/SearchComponent.jsx"],"names":["React","useState","useEffect","connect","Container","Spinner","Form","Button","axios","debounce","result","sendsearch","changeSearchVal","NavLink","Link","useHistory","SearchComponent","props","word","setWord","search","setSearch","history","handleChange","e","console","log","sendSearchState","target","value","mapStateToProps","state","searchVal","isSendingSearch","mapDispatchToProps","dispatch","question","newQuery"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,MAAnC,QAAiD,iBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,QAAjC;AACA,SACEC,UADF,EAEEC,eAFF,QAGO,oCAHP;AAIA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,UAAxB,QAA0C,kBAA1C;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,EAAhC;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,EAApC;AACA,MAAIqB,OAAO,GAAGP,UAAU,EAAxB;;AACA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AAC1BL,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFD;;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,KAAK,CAACN,UAAN,CAAiBS,MAAjB;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAGAK,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACU,eAAlB,EAAmC,KAAnC;AACA,sBACE;AAAA,2BACE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,EAAE,EAAC,cAFL;AAGE,MAAA,KAAK,EAAEP,MAHT;AAIE,MAAA,KAAK,EAAC,eAJR;AAKE,MAAA,QAAQ,EAAGI,CAAD,IAAOH,SAAS,CAACG,CAAC,CAACI,MAAF,CAASC,KAAV;AAL5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD;;GArEQb,e;UAGOD,U;;;KAHPC,e;;AAuET,MAAMc,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,SAAS,EAAED,KAAK,CAACX,MAAN,CAAaY,SADU;AAElCC,EAAAA,eAAe,EAAEF,KAAK,CAACX,MAAN,CAAaa,eAFI;AAGlCN,EAAAA,eAAe,EAAEI,KAAK,CAACX,MAAN,CAAaO;AAHI,CAAZ,CAAxB;;AAMA,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACxCxB,EAAAA,UAAU,EAAGyB,QAAD,IAAcD,QAAQ,CAACxB,UAAU,CAACyB,QAAD,CAAX,CADM;AAExCxB,EAAAA,eAAe,EAAGyB,QAAD,IAAcF,QAAQ,CAACvB,eAAe,CAACyB,QAAD,CAAhB;AAFC,CAAf,CAA3B;;AAKA,eAAelC,OAAO,CAAC2B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ClB,eAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Spinner, Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { debounce, result } from \"lodash\";\r\nimport {\r\n  sendsearch,\r\n  changeSearchVal,\r\n} from \"./../../redux/Search/Search.Action\";\r\nimport { NavLink, Link, useHistory } from \"react-router-dom\";\r\nfunction SearchComponent(props) {\r\n  const [word, setWord] = useState();\r\n  const [search, setSearch] = useState();\r\n  let history = useHistory();\r\n  const handleChange = (e) => {\r\n    setWord(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.sendsearch(search);\r\n  }, [search]);\r\n  console.log(props.sendSearchState, \"ppp\");\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"search\"\r\n        id=\"filled-basic\"\r\n        value={search}\r\n        label=\"Search a Word\"\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n      {/* {props.data.results.map((data) => (\r\n        <div>{console.log(data.id)}</div>\r\n      ))} */}\r\n      {/* {data == undefined ? (\r\n        console.log(\"null\")\r\n      ) : (\r\n        <div>\r\n          {data?.map((result) => (\r\n            <div key={result.id}>\r\n              {console.log(result.title, \"ppppppppppppppppppp\")}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )} */}\r\n\r\n      {/* <Form.Group\r\n        className={`d-block`}\r\n        onSubmit={(e) => history.push(`/search/${props.questionVal}`)}\r\n      >\r\n        <input\r\n          placeholder=\"أكتب سؤالك هنا\"\r\n          type=\"search\"\r\n          className=\"border-radius-15 fs-sm p-3 w-75 m-auto\"\r\n          onChange={(e) => props.changeQuestionVal(e.target.value)}\r\n          value={props.questionVal}\r\n        />\r\n      </Form.Group>\r\n      <Button\r\n        className={`m-auto py-2 py-md-2 cust-primary-btn fs-md w-50 d-block border-radius-10`}\r\n        onClick={(e) => sendAskMidoQuestion(props.questionVal)}\r\n      >\r\n        {props.isSendingQuestion ? (\r\n          <div className=\"text-center\">\r\n            <Spinner\r\n              as=\"span\"\r\n              animation=\"grow\"\r\n              size=\"sm\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            />\r\n            <span className=\"mr-1\">جاري الارسال...</span>\r\n          </div>\r\n        ) : (\r\n          <span>إرسل</span>\r\n        )}\r\n      </Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  searchVal: state.search.searchVal,\r\n  isSendingSearch: state.search.isSendingSearch,\r\n  sendSearchState: state.search.sendSearchState,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  sendsearch: (question) => dispatch(sendsearch(question)),\r\n  changeSearchVal: (newQuery) => dispatch(changeSearchVal(newQuery)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchComponent);\r\n"]},"metadata":{},"sourceType":"module"}