{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\App Corp\\\\Desktop\\\\CinemaApp\\\\src\\\\Components\\\\SearchComponent\\\\SearchComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Spinner, Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { sendAskMidoQuestion, changeQuestionVal } from \"./../../redux/Search/Search.Action\";\nimport { NavLink, Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchComponent(props) {\n  _s();\n\n  let history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n} // const mapStateToProps = (state) => ({\n//   questionVal: state.askMidoForm.questionVal,\n//   isSendingQuestion: state.askMidoForm.isSendingQuestion,\n//   sendQuestionState: state.askMidoForm.sendQuestionState,\n// });\n// const mapDispatchToProps = (dispatch) => ({\n//   sendAskMidoQuestion: (question) => dispatch(sendAskMidoQuestion(question)),\n//   changeQuestionVal: (newQuery) => dispatch(changeQuestionVal(newQuery)),\n// });\n\n\n_s(SearchComponent, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = SearchComponent;\nexport default SearchComponent; // connect(mapStateToProps, mapDispatchToProps)(SearchComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchComponent\");","map":{"version":3,"sources":["C:/Users/App Corp/Desktop/CinemaApp/src/Components/SearchComponent/SearchComponent.jsx"],"names":["React","useState","useEffect","connect","Container","Spinner","Form","Button","axios","sendAskMidoQuestion","changeQuestionVal","NavLink","Link","useHistory","SearchComponent","props","history"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,MAAnC,QAAiD,iBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,iBAFF,QAGO,oCAHP;AAIA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,UAAxB,QAA0C,kBAA1C;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,MAAIC,OAAO,GAAGH,UAAU,EAAxB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;GAhDSC,e;UACOD,U;;;KADPC,e;AAkDT,eAAeA,eAAf,C,CACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Spinner, Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {\r\n  sendAskMidoQuestion,\r\n  changeQuestionVal,\r\n} from \"./../../redux/Search/Search.Action\";\r\nimport { NavLink, Link, useHistory } from \"react-router-dom\";\r\nfunction SearchComponent(props) {\r\n  let history = useHistory();\r\n  return (\r\n    <div>\r\n      {/* <Form.Group\r\n        className={`d-block`}\r\n        onSubmit={(e) => history.push(`/search/${props.questionVal}`)}\r\n      >\r\n        <input\r\n          placeholder=\"أكتب سؤالك هنا\"\r\n          type=\"search\"\r\n          className=\"border-radius-15 fs-sm p-3 w-75 m-auto\"\r\n          onChange={(e) => props.changeQuestionVal(e.target.value)}\r\n          value={props.questionVal}\r\n        />\r\n      </Form.Group>\r\n      <Button\r\n        className={`m-auto py-2 py-md-2 cust-primary-btn fs-md w-50 d-block border-radius-10`}\r\n        onClick={(e) => sendAskMidoQuestion(props.questionVal)}\r\n      >\r\n        {props.isSendingQuestion ? (\r\n          <div className=\"text-center\">\r\n            <Spinner\r\n              as=\"span\"\r\n              animation=\"grow\"\r\n              size=\"sm\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            />\r\n            <span className=\"mr-1\">جاري الارسال...</span>\r\n          </div>\r\n        ) : (\r\n          <span>إرسل</span>\r\n        )}\r\n      </Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   questionVal: state.askMidoForm.questionVal,\r\n//   isSendingQuestion: state.askMidoForm.isSendingQuestion,\r\n//   sendQuestionState: state.askMidoForm.sendQuestionState,\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   sendAskMidoQuestion: (question) => dispatch(sendAskMidoQuestion(question)),\r\n//   changeQuestionVal: (newQuery) => dispatch(changeQuestionVal(newQuery)),\r\n// });\r\n\r\nexport default SearchComponent;\r\n// connect(mapStateToProps, mapDispatchToProps)(SearchComponent);\r\n"]},"metadata":{},"sourceType":"module"}