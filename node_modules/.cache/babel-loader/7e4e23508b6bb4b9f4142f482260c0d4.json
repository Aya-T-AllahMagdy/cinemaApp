{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\App Corp\\\\Desktop\\\\CinemaApp\\\\src\\\\Pages\\\\Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { sendsearch, changeSearchVal, clearSearch } from \"./../redux/Search/Search.Action\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search(props) {\n  _s();\n\n  let history = useHistory();\n  useEffect(() => {\n    props.sendsearch(history.location.state);\n    return () => {\n      props.clearSearch();\n    };\n  }, [history.location.state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"search\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Search, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = Search;\n\nconst mapStateToProps = state => ({\n  searchVal: state.search.searchVal,\n  isSendingSearch: state.search.isSendingSearch,\n  sendSearchState: state.search.sendSearchState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendsearch: question => dispatch(sendsearch(question)),\n  changeSearchVal: newQuery => dispatch(changeSearchVal(newQuery)),\n  clearSearch: () => dispatch(clearSearch())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/App Corp/Desktop/CinemaApp/src/Pages/Search.jsx"],"names":["React","useEffect","sendsearch","changeSearchVal","clearSearch","useHistory","connect","Search","props","history","location","state","mapStateToProps","searchVal","search","isSendingSearch","sendSearchState","mapDispatchToProps","dispatch","question","newQuery"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,UADF,EAEEC,eAFF,EAGEC,WAHF,QAIO,iCAJP;AAKA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrB,MAAIC,OAAO,GAAGJ,UAAU,EAAxB;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAACN,UAAN,CAAiBO,OAAO,CAACC,QAAR,CAAiBC,KAAlC;AACA,WAAO,MAAM;AACXH,MAAAA,KAAK,CAACJ,WAAN;AACD,KAFD;AAGD,GALQ,EAKN,CAACK,OAAO,CAACC,QAAR,CAAiBC,KAAlB,CALM,CAAT;AAMA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GATQJ,M;UACOF,U;;;KADPE,M;;AAWT,MAAMK,eAAe,GAAID,KAAD,KAAY;AAClCE,EAAAA,SAAS,EAAEF,KAAK,CAACG,MAAN,CAAaD,SADU;AAElCE,EAAAA,eAAe,EAAEJ,KAAK,CAACG,MAAN,CAAaC,eAFI;AAGlCC,EAAAA,eAAe,EAAEL,KAAK,CAACG,MAAN,CAAaE;AAHI,CAAZ,CAAxB;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxChB,EAAAA,UAAU,EAAGiB,QAAD,IAAcD,QAAQ,CAAChB,UAAU,CAACiB,QAAD,CAAX,CADM;AAExChB,EAAAA,eAAe,EAAGiB,QAAD,IAAcF,QAAQ,CAACf,eAAe,CAACiB,QAAD,CAAhB,CAFC;AAGxChB,EAAAA,WAAW,EAAE,MAAMc,QAAQ,CAACd,WAAW,EAAZ;AAHa,CAAf,CAA3B;;AAMA,eAAeE,OAAO,CAACM,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CV,MAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  sendsearch,\r\n  changeSearchVal,\r\n  clearSearch,\r\n} from \"./../redux/Search/Search.Action\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nfunction Search(props) {\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    props.sendsearch(history.location.state);\r\n    return () => {\r\n      props.clearSearch();\r\n    };\r\n  }, [history.location.state]);\r\n  return <div>search</div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  searchVal: state.search.searchVal,\r\n  isSendingSearch: state.search.isSendingSearch,\r\n  sendSearchState: state.search.sendSearchState,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  sendsearch: (question) => dispatch(sendsearch(question)),\r\n  changeSearchVal: (newQuery) => dispatch(changeSearchVal(newQuery)),\r\n  clearSearch: () => dispatch(clearSearch()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n"]},"metadata":{},"sourceType":"module"}