{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\App Corp\\\\Desktop\\\\CinemaApp\\\\src\\\\ProtectedRoute.jsx\";\nimport React, { useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport getUserMsisdn from \"./GlobalFunction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProtectedRoute(props, {\n  isAuth: isAuth,\n  component: Component,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      const msisdn = getUserMsisdn();\n\n      if (msisdn) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props,\n          ...rest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/Users/App Corp/Desktop/CinemaApp/src/ProtectedRoute.jsx"],"names":["React","useState","Route","Redirect","Cookies","getUserMsisdn","ProtectedRoute","props","isAuth","component","Component","rest","msisdn","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;;AACA,SAASC,cAAT,CACEC,KADF,EAEE;AAAEC,EAAAA,MAAM,EAAEA,MAAV;AAAkBC,EAAAA,SAAS,EAAEC,SAA7B;AAAwC,KAAGC;AAA3C,CAFF,EAGE;AACA,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGJ,KAAD,IAAW;AACjB,YAAMK,MAAM,GAAGP,aAAa,EAA5B;;AACA,UAAIO,MAAJ,EAAY;AACV,4BAAO,QAAC,SAAD,OAAeL,KAAf;AAAA,aAA0BI;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,4BACE,QAAC,QAAD;AACE,UAAA,EAAE,EAAE;AAAEE,YAAAA,QAAQ,EAAE,QAAZ;AAAsBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAER,KAAK,CAACS;AAAd;AAA7B;AADN;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;AACF;AAbH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;KArBQV,c;AAsBT,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nimport getUserMsisdn from \"./GlobalFunction\";\r\nfunction ProtectedRoute(\r\n  props,\r\n  { isAuth: isAuth, component: Component, ...rest }\r\n) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        const msisdn = getUserMsisdn();\r\n        if (msisdn) {\r\n          return <Component {...props} {...rest} />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/login\", state: { from: props.location } }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\nexport default ProtectedRoute;\r\n"]},"metadata":{},"sourceType":"module"}