{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\App Corp\\\\Desktop\\\\CinemaApp\\\\src\\\\Components\\\\SearchComponent\\\\SearchComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Spinner, Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { debounce, result } from \"lodash\";\nimport { sendAskMidoQuestion, changeQuestionVal } from \"./../../redux/Search/Search.Action\";\nimport { NavLink, Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchComponent(props) {\n  _s();\n\n  var _props$data;\n\n  const [word, setWord] = useState();\n  const [data, setData] = useState();\n  let history = useHistory();\n\n  const handleChange = e => {\n    setWord(\"\");\n  };\n\n  const dictionaryApi = async () => {\n    try {\n      const data = await axios.get(` https://api.themoviedb.org/3/search/movie?api_key=253921476edf880968690decdbeabcec&query=${word}`);\n      console.log(data);\n      setData(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleText = debounce(text => {\n    setWord(text);\n  }, 500);\n  useEffect(() => {\n    dictionaryApi();\n  }, [word]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search\",\n      id: \"filled-basic\" // value={word}\n      ,\n      label: \"Search a Word\",\n      onChange: e => handleText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), console.log(data), data == undefined ? console.log(\"null\") : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.data.results.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: console.log(result.title, \"ppppppppppppppppppp\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, result.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n} // const mapStateToProps = (state) => ({\n//   questionVal: state.askMidoForm.questionVal,\n//   isSendingQuestion: state.askMidoForm.isSendingQuestion,\n//   sendQuestionState: state.askMidoForm.sendQuestionState,\n// });\n// const mapDispatchToProps = (dispatch) => ({\n//   sendAskMidoQuestion: (question) => dispatch(sendAskMidoQuestion(question)),\n//   changeQuestionVal: (newQuery) => dispatch(changeQuestionVal(newQuery)),\n// });\n\n\n_s(SearchComponent, \"PZEiQt99hdM2E4hkGE6sG7i8VrM=\", false, function () {\n  return [useHistory];\n});\n\n_c = SearchComponent;\nexport default SearchComponent; // connect(mapStateToProps, mapDispatchToProps)(SearchComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchComponent\");","map":{"version":3,"sources":["C:/Users/App Corp/Desktop/CinemaApp/src/Components/SearchComponent/SearchComponent.jsx"],"names":["React","useState","useEffect","connect","Container","Spinner","Form","Button","axios","debounce","result","sendAskMidoQuestion","changeQuestionVal","NavLink","Link","useHistory","SearchComponent","props","word","setWord","data","setData","history","handleChange","e","dictionaryApi","get","console","log","error","handleText","text","target","value","undefined","results","map","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,MAAnC,QAAiD,iBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,QAAjC;AACA,SACEC,mBADF,EAEEC,iBAFF,QAGO,oCAHP;AAIA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,UAAxB,QAA0C,kBAA1C;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,EAAhC;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,EAAhC;AACA,MAAIqB,OAAO,GAAGP,UAAU,EAAxB;;AACA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AAC1BL,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFD;;AAIA,QAAMM,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,YAAML,IAAI,GAAG,MAAMZ,KAAK,CAACkB,GAAN,CAChB,6FAA4FR,IAAK,EADjF,CAAnB;AAGAS,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACAC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAND,CAME,OAAOS,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,GAVD;;AAWA,QAAMC,UAAU,GAAGrB,QAAQ,CAAEsB,IAAD,IAAU;AACpCZ,IAAAA,OAAO,CAACY,IAAD,CAAP;AACD,GAF0B,EAExB,GAFwB,CAA3B;AAGA7B,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACP,IAAD,CAFM,CAAT;AAGA,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,EAAE,EAAC,cAFL,CAGE;AAHF;AAIE,MAAA,KAAK,EAAC,eAJR;AAKE,MAAA,QAAQ,EAAGM,CAAD,IAAOM,UAAU,CAACN,CAAC,CAACQ,MAAF,CAASC,KAAV;AAL7B;AAAA;AAAA;AAAA;AAAA,YADF,EAQGN,OAAO,CAACC,GAAR,CAAYR,IAAZ,CARH,EASGA,IAAI,IAAIc,SAAR,GACCP,OAAO,CAACC,GAAR,CAAY,MAAZ,CADD,gBAGC;AAAA,+BACGX,KAAK,CAACG,IADT,gDACG,YAAYA,IAAZ,CAAiBe,OAAjB,CAAyBC,GAAzB,CAA8B1B,MAAD,iBAC5B;AAAA,+BACE;AAAA,oBAAKiB,OAAO,CAACC,GAAR,CAAYlB,MAAM,CAAC2B,KAAnB,EAA0B,qBAA1B;AAAL;AAAA;AAAA;AAAA;AAAA;AADF,SAAU3B,MAAM,CAAC4B,EAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;GA3FStB,e;UAGOD,U;;;KAHPC,e;AA6FT,eAAeA,eAAf,C,CACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Spinner, Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { debounce, result } from \"lodash\";\r\nimport {\r\n  sendAskMidoQuestion,\r\n  changeQuestionVal,\r\n} from \"./../../redux/Search/Search.Action\";\r\nimport { NavLink, Link, useHistory } from \"react-router-dom\";\r\nfunction SearchComponent(props) {\r\n  const [word, setWord] = useState();\r\n  const [data, setData] = useState();\r\n  let history = useHistory();\r\n  const handleChange = (e) => {\r\n    setWord(\"\");\r\n  };\r\n\r\n  const dictionaryApi = async () => {\r\n    try {\r\n      const data = await axios.get(\r\n        ` https://api.themoviedb.org/3/search/movie?api_key=253921476edf880968690decdbeabcec&query=${word}`\r\n      );\r\n      console.log(data);\r\n      setData(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const handleText = debounce((text) => {\r\n    setWord(text);\r\n  }, 500);\r\n  useEffect(() => {\r\n    dictionaryApi();\r\n  }, [word]);\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"search\"\r\n        id=\"filled-basic\"\r\n        // value={word}\r\n        label=\"Search a Word\"\r\n        onChange={(e) => handleText(e.target.value)}\r\n      />\r\n      {console.log(data)}\r\n      {data == undefined ? (\r\n        console.log(\"null\")\r\n      ) : (\r\n        <div>\r\n          {props.data?.data.results.map((result) => (\r\n            <div key={result.id}>\r\n              <h2>{console.log(result.title, \"ppppppppppppppppppp\")}</h2>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* <Form.Group\r\n        className={`d-block`}\r\n        onSubmit={(e) => history.push(`/search/${props.questionVal}`)}\r\n      >\r\n        <input\r\n          placeholder=\"أكتب سؤالك هنا\"\r\n          type=\"search\"\r\n          className=\"border-radius-15 fs-sm p-3 w-75 m-auto\"\r\n          onChange={(e) => props.changeQuestionVal(e.target.value)}\r\n          value={props.questionVal}\r\n        />\r\n      </Form.Group>\r\n      <Button\r\n        className={`m-auto py-2 py-md-2 cust-primary-btn fs-md w-50 d-block border-radius-10`}\r\n        onClick={(e) => sendAskMidoQuestion(props.questionVal)}\r\n      >\r\n        {props.isSendingQuestion ? (\r\n          <div className=\"text-center\">\r\n            <Spinner\r\n              as=\"span\"\r\n              animation=\"grow\"\r\n              size=\"sm\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            />\r\n            <span className=\"mr-1\">جاري الارسال...</span>\r\n          </div>\r\n        ) : (\r\n          <span>إرسل</span>\r\n        )}\r\n      </Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   questionVal: state.askMidoForm.questionVal,\r\n//   isSendingQuestion: state.askMidoForm.isSendingQuestion,\r\n//   sendQuestionState: state.askMidoForm.sendQuestionState,\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   sendAskMidoQuestion: (question) => dispatch(sendAskMidoQuestion(question)),\r\n//   changeQuestionVal: (newQuery) => dispatch(changeQuestionVal(newQuery)),\r\n// });\r\n\r\nexport default SearchComponent;\r\n// connect(mapStateToProps, mapDispatchToProps)(SearchComponent);\r\n"]},"metadata":{},"sourceType":"module"}