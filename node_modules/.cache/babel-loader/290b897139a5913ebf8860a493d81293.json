{"ast":null,"code":"import TopRatedTypes from \"./TopRated.Types\";\nimport axios from \"axios\";\nconst {\n  REACT_APP_BASE_URL,\n  REACT_APP_APIKEY\n} = process.env;\n\nconst getTopRatedStart = () => ({\n  type: TopRatedTypes.GET_TOP_RATED_START\n});\n\nconst getTopRatedSuccess = info => ({\n  type: TopRatedTypes.GET_TOP_RATED_SUCCESS,\n  payload: info.results\n});\n\nconst getTopRatedFailure = error => ({\n  type: TopRatedTypes.GET_TOP_RATED_FAILED,\n  payload: error\n});\n\nconst getTopRated = () => dispatch => {\n  dispatch(getTopRatedStart());\n  axios({\n    method: \"get\",\n    url: `${REACT_APP_BASE_URL}top_rated?api_key=${REACT_APP_APIKEY}`\n  }).then(resp => {\n    if (resp.status === 200) {\n      dispatch(getTopRatedSuccess(resp.data));\n    } else {\n      dispatch(getTopRatedFailure(resp.statusText));\n    }\n  }).catch(error => dispatch(getTopRatedFailure(error)));\n};\n\nexport { getTopRated };","map":{"version":3,"sources":["C:/Users/App Corp/Desktop/CinemaApp/src/redux/TopRated/TopRated.Action.jsx"],"names":["TopRatedTypes","axios","REACT_APP_BASE_URL","REACT_APP_APIKEY","process","env","getTopRatedStart","type","GET_TOP_RATED_START","getTopRatedSuccess","info","GET_TOP_RATED_SUCCESS","payload","results","getTopRatedFailure","error","GET_TOP_RATED_FAILED","getTopRated","dispatch","method","url","then","resp","status","data","statusText","catch"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAM;AAAEC,EAAAA,kBAAF;AAAsBC,EAAAA;AAAtB,IAA2CC,OAAO,CAACC,GAAzD;;AAEA,MAAMC,gBAAgB,GAAG,OAAO;AAC9BC,EAAAA,IAAI,EAAEP,aAAa,CAACQ;AADU,CAAP,CAAzB;;AAIA,MAAMC,kBAAkB,GAAIC,IAAD,KAAW;AACpCH,EAAAA,IAAI,EAAEP,aAAa,CAACW,qBADgB;AAEpCC,EAAAA,OAAO,EAAEF,IAAI,CAACG;AAFsB,CAAX,CAA3B;;AAKA,MAAMC,kBAAkB,GAAIC,KAAD,KAAY;AACrCR,EAAAA,IAAI,EAAEP,aAAa,CAACgB,oBADiB;AAErCJ,EAAAA,OAAO,EAAEG;AAF4B,CAAZ,CAA3B;;AAKA,MAAME,WAAW,GAAG,MAAOC,QAAD,IAAc;AACtCA,EAAAA,QAAQ,CAACZ,gBAAgB,EAAjB,CAAR;AACAL,EAAAA,KAAK,CAAC;AACJkB,IAAAA,MAAM,EAAE,KADJ;AAEJC,IAAAA,GAAG,EAAG,GAAElB,kBAAmB,qBAAoBC,gBAAiB;AAF5D,GAAD,CAAL,CAIGkB,IAJH,CAISC,IAAD,IAAU;AACd,QAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACvBL,MAAAA,QAAQ,CAACT,kBAAkB,CAACa,IAAI,CAACE,IAAN,CAAnB,CAAR;AACD,KAFD,MAEO;AACLN,MAAAA,QAAQ,CAACJ,kBAAkB,CAACQ,IAAI,CAACG,UAAN,CAAnB,CAAR;AACD;AACF,GAVH,EAWGC,KAXH,CAWUX,KAAD,IAAWG,QAAQ,CAACJ,kBAAkB,CAACC,KAAD,CAAnB,CAX5B;AAYD,CAdD;;AAgBA,SAASE,WAAT","sourcesContent":["import TopRatedTypes from \"./TopRated.Types\";\r\nimport axios from \"axios\";\r\n\r\nconst { REACT_APP_BASE_URL, REACT_APP_APIKEY } = process.env;\r\n\r\nconst getTopRatedStart = () => ({\r\n  type: TopRatedTypes.GET_TOP_RATED_START,\r\n});\r\n\r\nconst getTopRatedSuccess = (info) => ({\r\n  type: TopRatedTypes.GET_TOP_RATED_SUCCESS,\r\n  payload: info.results,\r\n});\r\n\r\nconst getTopRatedFailure = (error) => ({\r\n  type: TopRatedTypes.GET_TOP_RATED_FAILED,\r\n  payload: error,\r\n});\r\n\r\nconst getTopRated = () => (dispatch) => {\r\n  dispatch(getTopRatedStart());\r\n  axios({\r\n    method: \"get\",\r\n    url: `${REACT_APP_BASE_URL}top_rated?api_key=${REACT_APP_APIKEY}`,\r\n  })\r\n    .then((resp) => {\r\n      if (resp.status === 200) {\r\n        dispatch(getTopRatedSuccess(resp.data));\r\n      } else {\r\n        dispatch(getTopRatedFailure(resp.statusText));\r\n      }\r\n    })\r\n    .catch((error) => dispatch(getTopRatedFailure(error)));\r\n};\r\n\r\nexport { getTopRated };\r\n"]},"metadata":{},"sourceType":"module"}