{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\App Corp\\\\Desktop\\\\CinemaApp\\\\src\\\\ProtectedRoute.jsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute(props, {\n  isAuth: isAuth,\n  component: Component,\n  ...rest\n}) {\n  const cookies = new Cookies();\n  cookies.get(\"cinemaApp\");\n  console.log(cookies, \"oooooooooooooooo\");\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (!cookies.cinemaApp == undefined) {\n        return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/Users/App Corp/Desktop/CinemaApp/src/ProtectedRoute.jsx"],"names":["React","Route","Redirect","Cookies","ProtectedRoute","props","isAuth","component","Component","rest","cookies","get","console","log","cinemaApp","undefined","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AACA,eAAe,SAASC,cAAT,CACbC,KADa,EAEb;AAAEC,EAAAA,MAAM,EAAEA,MAAV;AAAkBC,EAAAA,SAAS,EAAEC,SAA7B;AAAwC,KAAGC;AAA3C,CAFa,EAGb;AACA,QAAMC,OAAO,GAAG,IAAIP,OAAJ,EAAhB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAqB,kBAArB;AACA,sBACE,QAAC,KAAD,OACMD,IADN;AAEE,IAAA,MAAM,EAAGJ,KAAD,IAAW;AACjB,UAAI,CAACK,OAAO,CAACI,SAAT,IAAsBC,SAA1B,EAAqC;AACnC,4BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,4BACE,QAAC,QAAD;AACE,UAAA,EAAE,EAAE;AAAEC,YAAAA,QAAQ,EAAE,QAAZ;AAAsBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEb,KAAK,CAACc;AAAd;AAA7B;AADN;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;AACF;AAZH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;KAvBuBf,c","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nexport default function ProtectedRoute(\r\n  props,\r\n  { isAuth: isAuth, component: Component, ...rest }\r\n) {\r\n  const cookies = new Cookies();\r\n  cookies.get(\"cinemaApp\");\r\n  console.log(cookies, \"oooooooooooooooo\");\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!cookies.cinemaApp == undefined) {\r\n          return <Component />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/login\", state: { from: props.location } }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}