{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\App Corp\\\\Desktop\\\\CinemaApp\\\\src\\\\Components\\\\SearchComponent\\\\SearchComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Spinner, Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { debounce, result } from \"lodash\";\nimport { sendsearch, changeSearchVal, clearSearch } from \"./../../redux/Search/Search.Action\";\nimport { NavLink, Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchComponent(props) {\n  _s();\n\n  var _props$sendSearchStat, _props$sendSearchStat2;\n\n  const [word, setWord] = useState();\n  const [search, setSearch] = useState();\n  let history = useHistory();\n\n  const handleChange = e => {\n    setWord(\"\");\n  };\n\n  const test = e => {\n    e.preventDefault();\n    history.push(\"/search\");\n  };\n\n  useEffect(() => {\n    props.sendsearch(search);\n    return () => {\n      props.clearSearch();\n    };\n  }, [search]);\n  console.log((_props$sendSearchStat = props.sendSearchState) === null || _props$sendSearchStat === void 0 ? void 0 : _props$sendSearchStat.results, \"ppp\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search\",\n      id: \"filled-basic\",\n      value: search,\n      label: \"Search a Word\",\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), props.sendSearchState == undefined || props.isSendingSearch ? \"ooook\" : (_props$sendSearchStat2 = props.sendSearchState) === null || _props$sendSearchStat2 === void 0 ? void 0 : _props$sendSearchStat2.results.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 56\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchComponent, \"/jpzc+3cwxL17o4L2TuhdpcCwcY=\", false, function () {\n  return [useHistory];\n});\n\n_c = SearchComponent;\n\nconst mapStateToProps = state => ({\n  searchVal: state.search.searchVal,\n  isSendingSearch: state.search.isSendingSearch,\n  sendSearchState: state.search.sendSearchState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendsearch: question => dispatch(sendsearch(question)),\n  changeSearchVal: newQuery => dispatch(changeSearchVal(newQuery)),\n  clearSearch: () => dispatch(clearSearch())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchComponent\");","map":{"version":3,"sources":["C:/Users/App Corp/Desktop/CinemaApp/src/Components/SearchComponent/SearchComponent.jsx"],"names":["React","useState","useEffect","connect","Container","Spinner","Form","Button","axios","debounce","result","sendsearch","changeSearchVal","clearSearch","NavLink","Link","useHistory","SearchComponent","props","word","setWord","search","setSearch","history","handleChange","e","test","preventDefault","push","console","log","sendSearchState","results","target","value","undefined","isSendingSearch","map","data","id","mapStateToProps","state","searchVal","mapDispatchToProps","dispatch","question","newQuery"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,MAAnC,QAAiD,iBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,QAAjC;AACA,SACEC,UADF,EAEEC,eAFF,EAGEC,WAHF,QAIO,oCAJP;AAKA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,UAAxB,QAA0C,kBAA1C;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,EAAhC;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,EAApC;AACA,MAAIsB,OAAO,GAAGP,UAAU,EAAxB;;AACA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AAC1BL,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFD;;AAGA,QAAMM,IAAI,GAAID,CAAD,IAAO;AAClBA,IAAAA,CAAC,CAACE,cAAF;AACAJ,IAAAA,OAAO,CAACK,IAAR,CAAa,SAAb;AACD,GAHD;;AAIA1B,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAACP,UAAN,CAAiBU,MAAjB;AACA,WAAO,MAAM;AACXH,MAAAA,KAAK,CAACL,WAAN;AACD,KAFD;AAGD,GALQ,EAKN,CAACQ,MAAD,CALM,CAAT;AAMAQ,EAAAA,OAAO,CAACC,GAAR,0BAAYZ,KAAK,CAACa,eAAlB,0DAAY,sBAAuBC,OAAnC,EAA4C,KAA5C;AACA,sBACE;AAAA,4BAEE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,EAAE,EAAC,cAFL;AAGE,MAAA,KAAK,EAAEX,MAHT;AAIE,MAAA,KAAK,EAAC,eAJR;AAKE,MAAA,QAAQ,EAAGI,CAAD,IAAOH,SAAS,CAACG,CAAC,CAACQ,MAAF,CAASC,KAAV;AAL5B;AAAA;AAAA;AAAA;AAAA,YAFF,EAUGhB,KAAK,CAACa,eAAN,IAAyBI,SAAzB,IAAsCjB,KAAK,CAACkB,eAA5C,GACG,OADH,6BAEGlB,KAAK,CAACa,eAFT,2DAEG,uBAAuBC,OAAvB,CAA+BK,GAA/B,CAAoCC,IAAD,iBAAU;AAAA,gBAAMA,IAAI,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YAA7C,CAZN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAlCQtB,e;UAGOD,U;;;KAHPC,e;;AAoCT,MAAMuB,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,SAAS,EAAED,KAAK,CAACpB,MAAN,CAAaqB,SADU;AAElCN,EAAAA,eAAe,EAAEK,KAAK,CAACpB,MAAN,CAAae,eAFI;AAGlCL,EAAAA,eAAe,EAAEU,KAAK,CAACpB,MAAN,CAAaU;AAHI,CAAZ,CAAxB;;AAMA,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACxCjC,EAAAA,UAAU,EAAGkC,QAAD,IAAcD,QAAQ,CAACjC,UAAU,CAACkC,QAAD,CAAX,CADM;AAExCjC,EAAAA,eAAe,EAAGkC,QAAD,IAAcF,QAAQ,CAAChC,eAAe,CAACkC,QAAD,CAAhB,CAFC;AAGxCjC,EAAAA,WAAW,EAAE,MAAM+B,QAAQ,CAAC/B,WAAW,EAAZ;AAHa,CAAf,CAA3B;;AAMA,eAAeV,OAAO,CAACqC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1B,eAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Spinner, Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { debounce, result } from \"lodash\";\r\nimport {\r\n  sendsearch,\r\n  changeSearchVal,\r\n  clearSearch,\r\n} from \"./../../redux/Search/Search.Action\";\r\nimport { NavLink, Link, useHistory } from \"react-router-dom\";\r\nfunction SearchComponent(props) {\r\n  const [word, setWord] = useState();\r\n  const [search, setSearch] = useState();\r\n  let history = useHistory();\r\n  const handleChange = (e) => {\r\n    setWord(\"\");\r\n  };\r\n  const test = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/search\");\r\n  };\r\n  useEffect(() => {\r\n    props.sendsearch(search);\r\n    return () => {\r\n      props.clearSearch();\r\n    };\r\n  }, [search]);\r\n  console.log(props.sendSearchState?.results, \"ppp\");\r\n  return (\r\n    <div>\r\n      {/* <form onSubmit={test}> */}\r\n      <input\r\n        className=\"search\"\r\n        id=\"filled-basic\"\r\n        value={search}\r\n        label=\"Search a Word\"\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n      {/* </form> */}\r\n      {props.sendSearchState == undefined || props.isSendingSearch\r\n        ? \"ooook\"\r\n        : props.sendSearchState?.results.map((data) => <div>{data.id}</div>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  searchVal: state.search.searchVal,\r\n  isSendingSearch: state.search.isSendingSearch,\r\n  sendSearchState: state.search.sendSearchState,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  sendsearch: (question) => dispatch(sendsearch(question)),\r\n  changeSearchVal: (newQuery) => dispatch(changeSearchVal(newQuery)),\r\n  clearSearch: () => dispatch(clearSearch()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchComponent);\r\n"]},"metadata":{},"sourceType":"module"}