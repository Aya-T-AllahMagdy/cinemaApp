{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\App Corp\\\\Desktop\\\\CinemaApp\\\\src\\\\ProtectedRoute.jsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute(props, {\n  isAuth: isAuth,\n  component: Component,\n  ...rest\n}) {\n  const cookies = new Cookies();\n  cookies.get(\"cinemaApp\");\n  console.log(cookies.get(\"cinemaApp\"));\n  return /*#__PURE__*/_jsxDEV(Route //   {...rest}\n  //   render={(props) => {\n  //     if (isAuth) {\n  //       return <Component />;\n  //     } else {\n  //       return (\n  //         <Redirect\n  //           to={{ pathname: \"/login\", state: { from: props.location } }}\n  //         />\n  //       );\n  //     }\n  //   }}\n  , {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/Users/App Corp/Desktop/CinemaApp/src/ProtectedRoute.jsx"],"names":["React","Route","Redirect","Cookies","ProtectedRoute","props","isAuth","component","Component","rest","cookies","get","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AACA,eAAe,SAASC,cAAT,CACbC,KADa,EAEb;AAAEC,EAAAA,MAAM,EAAEA,MAAV;AAAkBC,EAAAA,SAAS,EAAEC,SAA7B;AAAwC,KAAGC;AAA3C,CAFa,EAGb;AACA,QAAMC,OAAO,GAAG,IAAIP,OAAJ,EAAhB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAZ;AACA,sBACE,QAAC,KAAD,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;KAvBuBP,c","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nexport default function ProtectedRoute(\r\n  props,\r\n  { isAuth: isAuth, component: Component, ...rest }\r\n) {\r\n  const cookies = new Cookies();\r\n  cookies.get(\"cinemaApp\");\r\n  console.log(cookies.get(\"cinemaApp\"));\r\n  return (\r\n    <Route\r\n    //   {...rest}\r\n    //   render={(props) => {\r\n    //     if (isAuth) {\r\n    //       return <Component />;\r\n    //     } else {\r\n    //       return (\r\n    //         <Redirect\r\n    //           to={{ pathname: \"/login\", state: { from: props.location } }}\r\n    //         />\r\n    //       );\r\n    //     }\r\n    //   }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}