{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\App Corp\\\\Desktop\\\\CinemaApp\\\\src\\\\ProtectedRoute.jsx\";\n// import React, { useState } from \"react\";\n// import { Route, Redirect } from \"react-router-dom\";\n// import Cookies from \"universal-cookie\";\n// import { getUserMsisdn } from \"./GlobalFunction\";\n// function ProtectedRoute(\n//   props,\n//   { isAuth: isAuth, component: Component, ...rest }\n// ) {\n//   return (\n//     <Route\n//       {...rest}\n//       render={(props) => {\n//         let msisdn = getUserMsisdn();\n//         if (msisdn) {\n//           return <Component {...props} />;\n//         } else {\n//           return (\n//             <Redirect\n//               to={{ pathname: \"/login\", state: { from: props.location } }}\n//             />\n//           );\n//         }\n//       }}\n//     />\n//   );\n// }\n// export default ProtectedRoute;\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProtectedRoute({\n  component: Component,\n  ...restOfProps\n}) {\n  const isAuthenticated = localStorage.getItem(\"isAuthenticated\");\n  console.log(\"this\", isAuthenticated);\n  return /*#__PURE__*/_jsxDEV(Route, { ...restOfProps,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/Users/App Corp/Desktop/CinemaApp/src/ProtectedRoute.jsx"],"names":["React","Redirect","Route","ProtectedRoute","component","Component","restOfProps","isAuthenticated","localStorage","getItem","console","log","props"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAxB,EAAkE;AAChE,QAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,eAApB;AAEA,sBACE,QAAC,KAAD,OACMD,WADN;AAEE,IAAA,MAAM,EAAGM,KAAD,IACNL,eAAe,gBAAG,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA8B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHjD;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAZQT,c;AAcT,eAAeA,cAAf","sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Route, Redirect } from \"react-router-dom\";\r\n// import Cookies from \"universal-cookie\";\r\n// import { getUserMsisdn } from \"./GlobalFunction\";\r\n// function ProtectedRoute(\r\n//   props,\r\n//   { isAuth: isAuth, component: Component, ...rest }\r\n// ) {\r\n//   return (\r\n//     <Route\r\n//       {...rest}\r\n//       render={(props) => {\r\n//         let msisdn = getUserMsisdn();\r\n//         if (msisdn) {\r\n//           return <Component {...props} />;\r\n//         } else {\r\n//           return (\r\n//             <Redirect\r\n//               to={{ pathname: \"/login\", state: { from: props.location } }}\r\n//             />\r\n//           );\r\n//         }\r\n//       }}\r\n//     />\r\n//   );\r\n// }\r\n// export default ProtectedRoute;\r\n\r\nimport React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nfunction ProtectedRoute({ component: Component, ...restOfProps }) {\r\n  const isAuthenticated = localStorage.getItem(\"isAuthenticated\");\r\n  console.log(\"this\", isAuthenticated);\r\n\r\n  return (\r\n    <Route\r\n      {...restOfProps}\r\n      render={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/signin\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"]},"metadata":{},"sourceType":"module"}